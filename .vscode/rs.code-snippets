{
	// Place your Рабочая область React-project-single-page snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"React snippet fc": {
  "prefix": "rc",
  "body": [
    "import { classNames } from 'shared/lib/classNames/classNames';",
    "import { useTranslation } from 'react-i18next';",
    "import { memo } from 'react';",
    "import cls from './${TM_FILENAME_BASE}.module.scss';",
    "",
    "interface ${TM_FILENAME_BASE}Props {",
    "  className?: string;",
    "}",
    "",
    "export const ${TM_FILENAME_BASE} = memo((props: ${TM_FILENAME_BASE}Props) => {",
    "  const { className } = props;",
    "  const { t } = useTranslation();",
    "",
    "  return (",
    "    <div className={classNames(cls.${TM_FILENAME_BASE}, {}, [className])}>",
    "    </div>",
    "  );",
    "});",
  ],
    "description": "Creates a React snippet fc with TypeScript"
  },
  "Test Suite Template": {
    "prefix": "ts",
    "body": [
      "describe('${TM_FILENAME_BASE}', () => {",
      "\ttest('$1', () => {",
      "\t\texpect($2).toEqual($3);",
      "\t});",
      "});"
    ],
    "description": "Creates a test suite with a single test in Jest"
  }
}